<div class='row'>
  <div class='col-lg-5 border rounded mx-auto'>
    <div class='h5 ms-2 mt-1'>
      Player 1: <%= @game.player_1%> ('X')
    </div>
  </div>
  <div class='col-lg-5 border rounded mx-auto'>
    <div class='h5 ms-2 mt-1'>
      Player 2: <%= @game.player_2%> ('O')
    </div>
  </div>
</div>
<div class='mt-4' id="gameContainer">
  <div id="cellContainer" class="d-grid gap-2">
    <div cellIndex="0" class="cell btn btn-outline-secondary"></div>
    <div cellIndex="1" class="cell btn btn-outline-secondary"></div>
    <div cellIndex="2" class="cell btn btn-outline-secondary"></div>
    <div cellIndex="3" class="cell btn btn-outline-secondary"></div>
    <div cellIndex="4" class="cell btn btn-outline-secondary"></div>
    <div cellIndex="5" class="cell btn btn-outline-secondary"></div>
    <div cellIndex="6" class="cell btn btn-outline-secondary"></div>
    <div cellIndex="7" class="cell btn btn-outline-secondary"></div>
    <div cellIndex="8" class="cell btn btn-outline-secondary"></div>
  </div>
  <h2 id="statusText" class="mt-3"></h2>
  <button id="restartBtn" class="btn btn-primary">Restart</button>
</div>
<script>
  const cells = document.querySelectorAll(".cell");
  const statusText = document.querySelector("#statusText");
  const restartBtn = document.querySelector("#restartBtn");
  const winConditions = [
      [0, 1, 2],
      [3, 4, 5],
      [6, 7, 8],
      [0, 3, 6],
      [1, 4, 7],
      [2, 5, 8],
      [0, 4, 8],
      [2, 4, 6]
  ];
  let options = ["", "", "", "", "", "", "", "", ""];
  let currentPlayer = "X";
  let running = false;

  initializeGame();

  function initializeGame(){
      cells.forEach(cell => cell.addEventListener("click", cellClicked));
      restartBtn.addEventListener("click", restartGame);
      statusText.textContent = `${currentPlayer}'s turn`;
      running = true;
  }
  function cellClicked(){
      const cellIndex = this.getAttribute("cellIndex");

      if(options[cellIndex] != "" || !running){
          return;
      }

      updateCell(this, cellIndex);
      checkWinner();
  }
  function updateCell(cell, index){
      options[index] = currentPlayer;
      cell.textContent = currentPlayer;
  }
  function changePlayer(){
      currentPlayer = (currentPlayer == "X") ? "O" : "X";
      statusText.textContent = `${currentPlayer}'s turn`;
  }
  function checkWinner(){
      let roundWon = false;

      for(let i = 0; i < winConditions.length; i++){
          const condition = winConditions[i];
          const cellA = options[condition[0]];
          const cellB = options[condition[1]];
          const cellC = options[condition[2]];

          if(cellA == "" || cellB == "" || cellC == ""){
              continue;
          }
          if(cellA == cellB && cellB == cellC){
              roundWon = true;
              break;
          }
      }

      if(roundWon){
          statusText.textContent = `${currentPlayer} wins!`;
          running = false;
          saveGameDetails(currentPlayer)
      }
      else if(!options.includes("")){
          statusText.textContent = `Draw!`;
          running = false;
          saveGameDetails('draw')
      }
      else{
          changePlayer();
      }
  }
  function restartGame(){
    currentPlayer = "X";
    options = ["", "", "", "", "", "", "", "", ""];
    statusText.textContent = `${currentPlayer}'s turn`;
    cells.forEach(cell => cell.textContent = "");
    running = true;
  }
  function saveGameDetails(gameData) {
    fetch('<%= games_path(@game) %>?game_info=' + encodeURIComponent(gameData))
      .then(response => {
        if (response.redirected) {
          // Redirect to the specified location
          window.location.href = response.url;
        }
      })
      .catch(error => console.error('Error:', error));
  }
</script>